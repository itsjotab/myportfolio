{"ast":null,"code":"import NodeType from './type';\nimport Node from './node';\n/**\n * TextNode to contain a text element in DOM tree.\n * @param {string} value [description]\n */\n\nexport default class TextNode extends Node {\n  constructor(rawText) {\n    super();\n    this.rawText = rawText;\n    /**\n     * Node Type declaration.\n     * @type {Number}\n     */\n\n    this.nodeType = NodeType.TEXT_NODE;\n  }\n  /**\n   * Get unescaped text value of current node and its children.\n   * @return {string} text content\n   */\n\n\n  get text() {\n    return this.rawText;\n  }\n  /**\n   * Detect if the node contains only white space.\n   * @return {bool}\n   */\n\n\n  get isWhitespace() {\n    return /^(\\s|&nbsp;)*$/.test(this.rawText);\n  }\n\n  toString() {\n    return this.text;\n  }\n\n}","map":{"version":3,"names":["NodeType","Node","TextNode","constructor","rawText","nodeType","TEXT_NODE","text","isWhitespace","test","toString"],"sources":["/Users/itsjotab/portfolio/node_modules/node-html-parser/dist/esm/nodes/text.js"],"sourcesContent":["import NodeType from './type';\nimport Node from './node';\n/**\n * TextNode to contain a text element in DOM tree.\n * @param {string} value [description]\n */\nexport default class TextNode extends Node {\n    constructor(rawText) {\n        super();\n        this.rawText = rawText;\n        /**\n         * Node Type declaration.\n         * @type {Number}\n         */\n        this.nodeType = NodeType.TEXT_NODE;\n    }\n    /**\n     * Get unescaped text value of current node and its children.\n     * @return {string} text content\n     */\n    get text() {\n        return this.rawText;\n    }\n    /**\n     * Detect if the node contains only white space.\n     * @return {bool}\n     */\n    get isWhitespace() {\n        return /^(\\s|&nbsp;)*$/.test(this.rawText);\n    }\n    toString() {\n        return this.text;\n    }\n}\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,QAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,QAAN,SAAuBD,IAAvB,CAA4B;EACvCE,WAAW,CAACC,OAAD,EAAU;IACjB;IACA,KAAKA,OAAL,GAAeA,OAAf;IACA;AACR;AACA;AACA;;IACQ,KAAKC,QAAL,GAAgBL,QAAQ,CAACM,SAAzB;EACH;EACD;AACJ;AACA;AACA;;;EACY,IAAJC,IAAI,GAAG;IACP,OAAO,KAAKH,OAAZ;EACH;EACD;AACJ;AACA;AACA;;;EACoB,IAAZI,YAAY,GAAG;IACf,OAAO,iBAAiBC,IAAjB,CAAsB,KAAKL,OAA3B,CAAP;EACH;;EACDM,QAAQ,GAAG;IACP,OAAO,KAAKH,IAAZ;EACH;;AA1BsC"},"metadata":{},"sourceType":"module"}